public class Solution {
    public int Trap(int[] height) {
        int res = 0;
        if(height.Length < 2)
            return res;
        var leftMost = new int[height.Length];
        var rightMost = new int[height.Length];
        leftMost[0] = 0;
        rightMost[height.Length - 1] = 0;
        for(int i = 1; i < height.Length - 1; i++){
            leftMost[i] = Math.Max(leftMost[i - 1], height[i - 1]);
        }
        for(int i = height.Length - 2; i >= 0; i--){
            rightMost[i] = Math.Max(rightMost[i + 1], height[i + 1]);
        }
        for(int i = 0; i < height.Length; i++){
            if(Math.Min(leftMost[i], rightMost[i]) - height[i] > 0){
                res += Math.Min(leftMost[i], rightMost[i]) - height[i];
            }
        }
        return res;
    }
}