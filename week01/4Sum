class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        vector<vector<int>> answer;
        int n = nums.size();
        for(int i = 0; i< n - 3; i++){
            if(i > 0 && nums[i] == nums[i - 1]){
                continue;
            }
            for(int j = i + 1; j < n-2; j++){
                if(j > i + 1 && nums[j] == nums[j - 1]){
                    continue;
                }
                
                int tSum = target - (nums[i] + nums[j]);
                int low = j + 1, high = n - 1;
                while (low < high){
                    if (nums[low] + nums[high] == tSum){
                        vector<int> oneAnswer = {nums[i], nums[j], nums[low], nums[high]};
                        answer.push_back(oneAnswer);
                        while(low < high && nums[low] == nums[low + 1]){
                            low++;
                        }
                        while(low < high && nums[high] == nums[high - 1]){
                            high--;
                        }
                        low++;
                        high--;
                    }
                    else if(nums[low] + nums[high] < tSum){
                        low++;
                    }
                    else{
                        high--;
                    }
                    
                }
                
            }
        }
          
        return answer;
    }
};;
