class RandomizedSet {
    vector<int> nums;
    unordered_map<int,int> position;

public:
    RandomizedSet() {
     
    }
    bool insert(int val) {
           if(position.find(val) != position.end())
            return false;
        nums.push_back(val);
        position.insert({val, nums.size() - 1});
        return true;
    
    }
    
    bool remove(int val) {
        if(position.find(val) == position.end())
            return false;
        int pas = position[val];
        nums[pas] = nums[nums.size() - 1];
        position[nums[pas]] = pas;
        nums.pop_back();
        position.erase(val);
        return true;
    }
    
    int getRandom() {
        return nums[rand() % nums.size()];
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */
