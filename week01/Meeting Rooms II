/**
 * Definition of Interval:
 * public classs Interval {
 *     int start, end;
 *     Interval(int start, int end) {
 *         this.start = start;
 *         this.end = end;
 *     }
 * }
 */

 class Solution {
    /**
     * @param intervals: an array of meeting time intervals
     * @return: the minimum number of conference rooms required
     */
    public:
     int minMeetingRooms(vector<vector<int>>& intervals) {
        sort(intervals.begin(), intervals.end(), 
        [](auto a, auto b) {return a[0] < b[0];});
        priority_queue<int, vector<int>, greater<int>>pq;
        for(auto it:intervals)
        {
            if(not pq.empty() and it[0] >= pq.top()) pq.pop();
            pq.push(it[1]);  

        }
        return pq.size();
    }
};
